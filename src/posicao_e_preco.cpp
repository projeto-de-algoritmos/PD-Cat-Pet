#include <bits/stdc++.h>
using namespace std;

int calc_valor_preco(vector<int> preco){
    vector<int> tam(preco.size(), -1);
    function<int(int)> val_max = [&](int pos){
        if(tam[pos] != -1) return tam[pos];
        if(pos == 0) return tam[pos] = preco[0];
        if(pos == 1) return tam[pos] = max(preco[0], preco[1]);
        return tam[pos] = max(
         val_max(pos - 1),
         val_max(pos - 2) + preco[pos]
        );
    };
    return val_max(preco.size() - 1);
}

vector<int> calc_posicao(vector<int> preco){
    vector<int> m_posicao(preco.size(), -1);
    function<int(int)> max_p = [&](int pos){
        if (m_posicao[pos] != -1) return m_posicao[pos];
        if(pos == 0) return m_posicao[pos] = preco[0];
        if(pos == 1) return m_posicao[pos] = max(preco[0], preco[1]);
        return m_posicao[pos] = max(
            max_p(pos - 1),
            max_p(pos - 2) + preco[pos]
        );
        
    };

    int resposta = max_p((int)preco.size() - 1);
    vector<int> solucao;
    function<void(int)> recuperar = [&](int pos){
        if(pos < 0)
            return;
        if(pos == 0){
            solucao.push_back(0);
            return;
        }
        int ans_pos = max_p(pos);
        int ans_pos_1 = max_p(pos - 1);
        if(ans_pos == ans_pos_1){
            recuperar(pos - 1);
            return;
        }
        solucao.push_back(pos);
        recuperar(pos - 2);
    };
    recuperar((int)preco.size() - 1);

    int solucao_soma= 0;
    for(int pos : solucao){
        solucao_soma+= preco[pos];
    }
    assert(solucao_soma== resposta);

    return solucao;
    
}




void show(vector<int> sol){
    for(int pos : sol)
        cout << pos +1 << " ";
    cout << endl;
}


void menu(){


cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░██░▀██████████████▀░██░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█▌▒▒░████████████░▒▒▐█░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░▒▒▒░██████████░▒▒▒░█░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░█▌░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░▐░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░█░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░████▀▀▀██▄▒▒▒▒▒▒▒▄██▀▀▀██░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░███░░░▐█░▀█▒▒▒▒▒█▀░█▌░░░█░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░▐▌░░░▐▄▌░▐▌▒▒▒▐▌░▐▄▌░░▐░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░██░░░▐█▌░░▌▒▒▒▐░░▐█▌░░█░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░█▒▀▄▄▄█▄▄▄▌░▄░▐▄▄▄█▄▄▀▒░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░█░░░░░░░░░░└┴┘░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░███▄▄░░░░░░░░░░░░░░▄▄██░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░█████████▒▒▒▒▒▒████████░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░██▀░░███▒▒░░▒░░▒▀██████░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒░███▒▒╖░░╥░░╓▒▐█████░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░██▒░▀▀▀░░║░░║░░║░░█████░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░██▄▄▄▄▀▀┴┴╚╧╧╝╧╧╝┴┴███░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░███████████████████████░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░Sejam bem-vindo a CAT & Pet soluções░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"  ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░Precione ENTER para Continuar░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;

  
}

void Informacao(){


cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░Informações Gerais:░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░A Cat&Pet é um petshop bem conhecido com um grande fluxos de pacientes.░░▬●"<<endl;
cout<<"●▬░░░por motivos da pandemia por causa do virus Comona-virus, a OMS criou ░░░░▬●"<<endl;
cout<<"●▬░░░algumas restrições, que serão explicado na proximo bloco.░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░Precione ENTER para Continuar░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;

  
}


void Problema(){


cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░Problema: ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░Normalmente os pacientes são atendidos por ordem de chegada, e apesar  ░░▬●"<<endl;
cout<<"●▬░░░disso sempre é criada uma fila, mas atualmente a OMS disponibilizou    ░░░░▬●"<<endl;
cout<<"●▬░░░algumas restrições, que serão explicado na proximo bloco.░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░Precione ENTER para Continuar░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;


}

void Problema1(){

cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░Problema: ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░   Antes a organização das filas era feita da seguinte maneira. As     ░░▬●"<<endl;
cout<<"●▬░░░ Pessoas serão representadas pelo 'O'                                  ░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░                              O O O O O O                              ░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░   Por conta das recomendações da OMS a fila foi organizada da seguinte░░▬●"<<endl;
cout<<"●▬░░░maneira. Os espaços VAZIOS serão representadas pelo 'X'                ░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░                              O X O X O X                              ░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░Precione ENTER para Continuar░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
}

void resultado_final(int n ){

cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░Valor: ░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░   O Valor maximo possivel é "<<n<< " ░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;

}

void finalizar(){
  cout<<"●▬░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▬●"<<endl;
  cout<<"●▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩۩۞۩۩۞۩۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬●"<<endl;
}



int main(){

    int flag;
    int quantidade = 0, valor =0;
    vector<int> valor_total;

    menu();
    flag = getc(stdin);
    system("clear||cls");



    Informacao();
    flag = getc(stdin);
    system("clear||cls");


    Problema1();
    flag = getc(stdin);
    system("clear||cls");
 
    
    cout << "Digite o tamaho da fila"<<endl;

    cin >> quantidade;

    
    for(int i =0; i< quantidade; i++){
       cout << "Digite o valor da consulta do pet: "<<i+1<<endl;
       cin>>valor;
       valor_total.push_back(valor);

    }

    resultado_final(calc_valor_preco(valor_total));

   cout << "                  Selecione apenas a(s) consulta(s) ";
    show(calc_posicao(valor_total));
 

    finalizar()
     

    return 0;
}